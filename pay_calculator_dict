def calculate_pay(hours_worked, is_weekend, is_public_holiday):
    hourly_rate = 15.0 if is_weekend else 12.0
    hourly_rate *= 1.5 if is_public_holiday else 1.0
    total_pay = hours_worked * hourly_rate
    return total_pay

def get_valid_date_input(prompt):
    while True:
        try:
            date_str = input(prompt)
            return date_str
        except ValueError:
            print("Invalid date format. Please use dd/mm/yyyy.")

def main():
    work_data = {}

    while True:
        try:
            date = get_valid_date_input("Enter the date (dd/mm/yyyy) or 'q' to quit: ")
            if date.lower() == 'q':
                break

            hours_worked = float(input("Enter the number of hours worked: "))
            if hours_worked <= 0:
                raise ValueError("Hours worked must be a positive number.")

            day_type = input("Is it a weekend? (yes/no): ").strip().lower()
            is_weekend = day_type == 'yes'
            if day_type not in ['yes', 'no']:
                raise ValueError("Please enter 'yes' or 'no' for weekend status.")

            public_holiday = input("Is it a public holiday? (yes/no): ").strip().lower()
            is_public_holiday = public_holiday == 'yes'
            if public_holiday not in ['yes', 'no']:
                raise ValueError("Please enter 'yes' or 'no' for public holiday status.")
            
            total_pay = calculate_pay(hours_worked, is_weekend, is_public_holiday)

            work_entry = {
                "hours_worked": hours_worked,
                "is_weekend": is_weekend,
                "is_public_holiday": is_public_holiday,
                "total_pay": total_pay
            }

            work_data[date] = work_entry

            print(f"Total pay: ${total_pay:.2f}")
        except ValueError as e:
            print(f"Error: {e}")
        except Exception as e:
            print(f"An unexpected error occurred: {e}")

    print("Work Data:")
    for date, entry in work_data.items():
        print(f"Date: {date}, Hours Worked: {entry['hours_worked']}, Weekend: {'Yes' if entry['is_weekend'] else 'No'}, "
              f"Public Holiday: {'Yes' if entry['is_public_holiday'] else 'No'}, Total Pay: {entry['total_pay']:.2f}")

if __name__ == "__main__":
    main()
